version: 0.2

phases:
  install:
    runtime-versions:
      dotnet: 8.0
    commands:
      - echo "Instalando las dependencias necesarias"
  pre_build:
    commands:
      - echo "Installing unzip..."
      - apt-get update && apt-get install -y unzip
      - echo "Installing Docker..."
      - apt-get update && apt-get install -y docker.io
      - echo "Installing AWS CLI..."
      - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
      - unzip awscliv2.zip
      - ./aws/install
      - echo "Restaurando las dependencias del proyecto..."
      - dotnet restore BlackListApi/BlackListApi/BlackListApi.csproj
      - aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 985539775509.dkr.ecr.us-east-2.amazonaws.com
      - docker info
  build:
    commands:
      - echo "Compilando la aplicación..."
      - dotnet build BlackListApi/BlackListApi/BlackListApi.csproj --configuration Release
  post_build:
    commands:
      - echo "Ejecutando las pruebas..."
      - dotnet test BlackListApi/Tests/Tests.csproj --configuration Release
      - echo "Generando archivos de publicación..."
      - dotnet publish BlackListApi/BlackListApi/BlackListApi.csproj --configuration Release -o output/publish
      - echo "Construyendo la imagen del contenedor..."
      - echo "Generando la imagen con tag = latest"
      - docker build -t 985539775509.dkr.ecr.us-east-2.amazonaws.com/miso-devops:latest -f BlackListApi/Dockerfile.ci .
      - echo "Pushing la imagen al repositorio ECR aws..."
      - docker push  985539775509.dkr.ecr.us-east-2.amazonaws.com/miso-devops:latest
      - echo Writing Image Definitions file...
      - printf '[{"name":"miso-devops-blacklist","imageUri":"985539775509.dkr.ecr.us-east-2.amazonaws.com/miso-devops:latest"}]' > imagedefinitions.json
      - printf '{"ImageURI":"985539775509.dkr.ecr.us-east-2.amazonaws.com/miso-devops:latest"}' > imageDetail.json
      - cat imagedefinitions.json 
      
artifacts:
  files:
    - '**/*'
    - imagedefinitions.json
    - imageDetail.json
    - taskdef.json
    - appspec.json
  secondary-artifacts:
    DefinitionArtifact:
      files:
        - appspec.yaml
        - taskdef.json

cache:
  paths:
    - '**/obj/**'
    - '**/bin/**'
